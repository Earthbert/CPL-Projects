    .data
    .align  2
    .globl  class_nameTab
    .globl  Int_protObj
    .globl  String_protObj
    .globl  bool_const0
    .globl  bool_const1
    .globl  Main_protObj
    .globl  _int_tag
    .globl  _string_tag
    .globl  _bool_tag
_int_tag:
    .word   1
_string_tag:
    .word   2
_bool_tag:
    .word   3
class_nameTab:
    .word   string_const1
    .word   string_const2
    .word   string_const3
    .word   string_const4
    .word   string_const5
    .word   string_const6
    .word   string_const7
    .word   string_const8
    .word   string_const9
    .word   string_const10
    .word   string_const11
    .word   string_const12
class_objTab:
    .word   Object_protObj
    .word   Object_init
    .word   Int_protObj
    .word   Int_init
    .word   String_protObj
    .word   String_init
    .word   Bool_protObj
    .word   Bool_init
    .word   IO_protObj
    .word   IO_init
    .word   A_protObj
    .word   A_init
    .word   B_protObj
    .word   B_init
    .word   C_protObj
    .word   C_init
    .word   D_protObj
    .word   D_init
    .word   E_protObj
    .word   E_init
    .word   F_protObj
    .word   F_init
    .word   Main_protObj
    .word   Main_init
string_const0:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const6
    .asciiz ""
    .align  2
string_const1:
    .word   2
    .word   6
    .word   String_dispTable
    .word   int_const7
    .asciiz "Object"
    .align  2
string_const2:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const3
    .asciiz "Int"
    .align  2
string_const3:
    .word   2
    .word   6
    .word   String_dispTable
    .word   int_const7
    .asciiz "String"
    .align  2
string_const4:
    .word   2
    .word   6
    .word   String_dispTable
    .word   int_const4
    .asciiz "Bool"
    .align  2
string_const5:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const2
    .asciiz "IO"
    .align  2
string_const6:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "A"
    .align  2
string_const7:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "B"
    .align  2
string_const8:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "C"
    .align  2
string_const9:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "D"
    .align  2
string_const10:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "E"
    .align  2
string_const11:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "F"
    .align  2
string_const12:
    .word   2
    .word   6
    .word   String_dispTable
    .word   int_const4
    .asciiz "Main"
    .align  2
string_const13:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const3
    .asciiz "abc"
    .align  2
string_const14:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const1
    .asciiz "
"
    .align  2
string_const15:
    .word   2
    .word   8
    .word   String_dispTable
    .word   int_const8
    .asciiz "27-compare.cl"
    .align  2
string_const16:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const2
    .asciiz "OK"
    .align  2
string_const17:
    .word   2
    .word   6
    .word   String_dispTable
    .word   int_const7
    .asciiz "failed"
    .align  2
string_const18:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const3
    .asciiz "aaa"
    .align  2
string_const19:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const2
    .asciiz "aa"
    .align  2
string_const20:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const3
    .asciiz "aba"
    .align  2
int_const0:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   100
int_const1:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   1
int_const2:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   2
int_const3:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   3
int_const4:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   4
int_const5:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   5
int_const6:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   0
int_const7:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   6
int_const8:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   13
bool_const0:
    .word   3
    .word   4
    .word   Bool_dispTable
    .word   0
bool_const1:
    .word   3
    .word   4
    .word   Bool_dispTable
    .word   1
Object_protObj:
    .word   0
    .word   3
    .word   Object_dispTable
Int_protObj:
    .word   1
    .word   4
    .word   Int_dispTable
    .word   0
String_protObj:
    .word   2
    .word   5
    .word   String_dispTable
    .word   int_const6
    .asciiz ""
    .align  2
Bool_protObj:
    .word   3
    .word   4
    .word   Bool_dispTable
    .word   0
IO_protObj:
    .word   4
    .word   3
    .word   IO_dispTable
A_protObj:
    .word   5
    .word   4
    .word   A_dispTable
    .word   int_const6
B_protObj:
    .word   6
    .word   5
    .word   B_dispTable
    .word   int_const6
    .word   string_const0
C_protObj:
    .word   7
    .word   5
    .word   C_dispTable
    .word   int_const6
    .word   bool_const0
D_protObj:
    .word   8
    .word   5
    .word   D_dispTable
    .word   int_const6
    .word   string_const0
E_protObj:
    .word   9
    .word   5
    .word   E_dispTable
    .word   int_const6
    .word   string_const0
F_protObj:
    .word   10
    .word   5
    .word   F_dispTable
    .word   int_const6
    .word   bool_const0
Main_protObj:
    .word   11
    .word   6
    .word   Main_dispTable
    .word   int_const6
    .word   string_const0
    .word   0
Object_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
Int_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
String_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   String.length
    .word   String.concat
    .word   String.substr
Bool_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
IO_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
A_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   A.f
B_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   A.f
    .word   B.g
C_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   C.f
    .word   C.h
D_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   A.f
    .word   B.g
E_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   A.f
    .word   B.g
F_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   IO.out_string
    .word   IO.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   C.f
    .word   C.h
Main_dispTable:
    .word   Object.abort
    .word   Object.type_name
    .word   Object.copy
    .word   Main.out_string
    .word   Main.out_int
    .word   IO.in_string
    .word   IO.in_int
    .word   A.f
    .word   B.g
    .word   Main.main
heap_start:
    .word   0
    .text
    .globl  Int_init
    .globl  String_init
    .globl  Bool_init
    .globl  Main_init
    .globl  Main.main
Object_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
Int_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
String_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
Bool_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
IO_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     Object_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
A_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     IO_init
    la      $a0 int_const0
    sw      $a0 12($s0)
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
A.f:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    la      $a0 int_const1
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
B_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     A_init
    la      $a0 string_const13
    sw      $a0 16($s0)
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
B.g:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    la      $a0 int_const2
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
C_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     A_init
    la      $a0 bool_const1
    sw      $a0 16($s0)
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
C.f:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    la      $a0 int_const3
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
C.h:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    la      $a0 int_const4
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
D_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     B_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
E_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     B_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
F_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     C_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
Main_init:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    jal     E_init
    move    $a0 $s0
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
Main.out_string:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    addiu   $sp $sp -4
    addiu   $sp $sp -4
    la      $a0 string_const14
    sw      $a0 4($sp)
    lw      $a0 12($fp)
    bnez    $a0 Main.out_string_dispatch_0
    la      $a0 string_const15
    li      $t1 30
    jal     _dispatch_abort
Main.out_string_dispatch_0:
    lw      $t1 8($a0)
    lw      $t1 16($t1)
    jalr    $t1
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.out_string_dispatch_1
    la      $a0 string_const15
    li      $t1 30
    jal     _dispatch_abort
Main.out_string_dispatch_1:
    la      $t1 IO_dispTable
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    addiu   $sp $sp 4
    jr      $ra
Main.out_int:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    move    $s0 $a0
    addiu   $sp $sp -4
    la      $a0 string_const14
    sw      $a0 4($sp)
    addiu   $sp $sp -4
    lw      $a0 12($fp)
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.out_int_dispatch_1
    la      $a0 string_const15
    li      $t1 34
    jal     _dispatch_abort
Main.out_int_dispatch_1:
    la      $t1 IO_dispTable
    lw      $t1 16($t1)
    jalr    $t1
    bnez    $a0 Main.out_int_dispatch_0
    la      $a0 string_const15
    li      $t1 34
    jal     _dispatch_abort
Main.out_int_dispatch_0:
    la      $t1 IO_dispTable
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    addiu   $sp $sp 4
    jr      $ra
Main.main:
    addiu   $sp $sp -12
    sw      $fp 12($sp)
    sw      $s0 8($sp)
    sw      $ra 4($sp)
    addiu   $fp $sp 4
    addiu   $sp $sp -4
    move    $s0 $a0
    addiu   $sp $sp -4
    la      $a0 int_const3
    sw      $a0 -4($fp)
    la      $a0 int_const5
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    blt     $t1 $t2 Main.main_endCompare_0
    la      $a0 bool_const0
Main.main_endCompare_0:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_0
    la      $a0 string_const16
    b       Main.main_endif_0
Main.main_else_0:
    la      $a0 string_const17
Main.main_endif_0:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_0
    la      $a0 string_const15
    li      $t1 39
    jal     _dispatch_abort
Main.main_dispatch_0:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 int_const3
    sw      $a0 -4($fp)
    la      $a0 int_const5
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    ble     $t1 $t2 Main.main_endCompare_1
    la      $a0 bool_const0
Main.main_endCompare_1:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_1
    la      $a0 string_const16
    b       Main.main_endif_1
Main.main_else_1:
    la      $a0 string_const17
Main.main_endif_1:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_1
    la      $a0 string_const15
    li      $t1 40
    jal     _dispatch_abort
Main.main_dispatch_1:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 int_const5
    sw      $a0 -4($fp)
    la      $a0 int_const3
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    blt     $t1 $t2 Main.main_endCompare_2
    la      $a0 bool_const0
Main.main_endCompare_2:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_2
    la      $a0 string_const16
    b       Main.main_endif_2
Main.main_else_2:
    la      $a0 string_const17
Main.main_endif_2:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_2
    la      $a0 string_const15
    li      $t1 41
    jal     _dispatch_abort
Main.main_dispatch_2:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 int_const5
    sw      $a0 -4($fp)
    la      $a0 int_const3
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    ble     $t1 $t2 Main.main_endCompare_3
    la      $a0 bool_const0
Main.main_endCompare_3:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_3
    la      $a0 string_const16
    b       Main.main_endif_3
Main.main_else_3:
    la      $a0 string_const17
Main.main_endif_3:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_3
    la      $a0 string_const15
    li      $t1 42
    jal     _dispatch_abort
Main.main_dispatch_3:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 int_const3
    sw      $a0 -4($fp)
    la      $a0 int_const3
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    blt     $t1 $t2 Main.main_endCompare_4
    la      $a0 bool_const0
Main.main_endCompare_4:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_4
    la      $a0 string_const16
    b       Main.main_endif_4
Main.main_else_4:
    la      $a0 string_const17
Main.main_endif_4:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_4
    la      $a0 string_const15
    li      $t1 43
    jal     _dispatch_abort
Main.main_dispatch_4:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 int_const3
    sw      $a0 -4($fp)
    la      $a0 int_const3
    lw      $t1 -4($fp)
    lw      $t1 12($t1)
    lw      $t2 12($a0)
    la      $a0 bool_const1
    ble     $t1 $t2 Main.main_endCompare_5
    la      $a0 bool_const0
Main.main_endCompare_5:
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_5
    la      $a0 string_const16
    b       Main.main_endif_5
Main.main_else_5:
    la      $a0 string_const17
Main.main_endif_5:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_5
    la      $a0 string_const15
    li      $t1 44
    jal     _dispatch_abort
Main.main_dispatch_5:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 string_const18
    sw      $a0 -4($fp)
    la      $a0 string_const19
    lw      $t1 -4($fp)
    move    $t2 $a0
    la      $a0 bool_const1
    la      $a1 bool_const0
    jal     string_lt
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_6
    la      $a0 string_const16
    b       Main.main_endif_6
Main.main_else_6:
    la      $a0 string_const17
Main.main_endif_6:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_6
    la      $a0 string_const15
    li      $t1 46
    jal     _dispatch_abort
Main.main_dispatch_6:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 string_const18
    sw      $a0 -4($fp)
    la      $a0 string_const18
    lw      $t1 -4($fp)
    move    $t2 $a0
    la      $a0 bool_const1
    la      $a1 bool_const0
    jal     string_lt
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_7
    la      $a0 string_const16
    b       Main.main_endif_7
Main.main_else_7:
    la      $a0 string_const17
Main.main_endif_7:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_7
    la      $a0 string_const15
    li      $t1 47
    jal     _dispatch_abort
Main.main_dispatch_7:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 string_const18
    sw      $a0 -4($fp)
    la      $a0 string_const18
    lw      $t1 -4($fp)
    move    $t2 $a0
    la      $a0 bool_const1
    la      $a1 bool_const0
    jal     string_le
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_8
    la      $a0 string_const16
    b       Main.main_endif_8
Main.main_else_8:
    la      $a0 string_const17
Main.main_endif_8:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_8
    la      $a0 string_const15
    li      $t1 48
    jal     _dispatch_abort
Main.main_dispatch_8:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 string_const20
    sw      $a0 -4($fp)
    la      $a0 string_const18
    lw      $t1 -4($fp)
    move    $t2 $a0
    la      $a0 bool_const1
    la      $a1 bool_const0
    jal     string_lt
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_9
    la      $a0 string_const16
    b       Main.main_endif_9
Main.main_else_9:
    la      $a0 string_const17
Main.main_endif_9:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_9
    la      $a0 string_const15
    li      $t1 49
    jal     _dispatch_abort
Main.main_dispatch_9:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $sp -4
    la      $a0 string_const18
    sw      $a0 -4($fp)
    la      $a0 string_const20
    lw      $t1 -4($fp)
    move    $t2 $a0
    la      $a0 bool_const1
    la      $a1 bool_const0
    jal     string_lt
    lw      $t1 12($a0)
    beqz    $t1 Main.main_else_10
    la      $a0 string_const16
    b       Main.main_endif_10
Main.main_else_10:
    la      $a0 string_const17
Main.main_endif_10:
    sw      $a0 4($sp)
    move    $a0 $s0
    bnez    $a0 Main.main_dispatch_10
    la      $a0 string_const15
    li      $t1 50
    jal     _dispatch_abort
Main.main_dispatch_10:
    lw      $t1 8($a0)
    lw      $t1 12($t1)
    jalr    $t1
    addiu   $sp $fp 8
    lw      $ra 0($fp)
    lw      $s0 4($fp)
    lw      $fp 8($fp)
    jr      $ra
